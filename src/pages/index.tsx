import type { GetServerSidePropsContext, NextPage } from "next";
import Head from "next/head";
import { unstable_getServerSession } from "next-auth/next";
import { authOptions } from "./api/auth/[...nextauth]";
import PostCard from "../components/post-card";
import PostInput from "@/components/post-input";
import React, { ReactElement, useState } from "react";
import { useInView } from "react-intersection-observer";
import { useInfiniteFeedQuery } from "src/hooks/query";
import TrendingTagsList from "@/components/trending-tags-list";
import { Fragment } from "react";
import Layout from "@/components/layout";
import ModalWrapper from "@/components/modal-wrapper";
import PostDetails from "@/components/post-details";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const { ref, inView } = useInView();
  const { data, fetchNextPage, isSuccess } = useInfiniteFeedQuery();

  React.useEffect(() => {
    if (inView) {
      fetchNextPage();
    }
  }, [inView, fetchNextPage]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <PostInput />
        <div className="mb-5" />
        <div className="space-y-5">
          {isSuccess &&
            data.pages.map((page) => (
              <Fragment key={page.nextCursor || null}>
                {page.posts.map((post) => (
                  <PostCard key={post.id} post={post} />
                ))}
              </Fragment>
            ))}
          <div ref={ref} className="w-full h-10 bg-orange-300" />
        </div>
      </Layout>
    </>
  );
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (!session) {
    return {
      redirect: {
        destination: "/api/auth/signin",
        permanent: false,
      },
    };
  }
  return {
    props: { session },
  };
}

export default Home;
