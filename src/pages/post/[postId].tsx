import type { GetServerSidePropsContext } from "next";
import Head from "next/head";
import { unstable_getServerSession } from "next-auth/next";
import { useRouter } from "next/router";
import CommentsList from "../../components/comments-list";
import PostCard from "@/components/post-card";
import MessageInput from "@/components/message-input";
import { authOptions } from "src/pages/api/auth/[...nextauth]";
import { usePost, usePostComments } from "src/hooks/query";
import { useAddCommentMutation } from "src/hooks/mutation";

const Post = () => {
  const { query } = useRouter();

  const postId = query.postId as string;

  const post = usePost(postId);
  const postComments = usePostComments(postId);
  const addComment = useAddCommentMutation(postId);

  const handleAddComment = (message: string) => {
    addComment({
      message: message,
      parentId: null,
    });
  };

  if (postId.length === 0) return;

  if (post.isError) {
    return <div>Error...</div>;
  }

  if (post.isLoading) {
    return <div>Loading...</div>;
  }
  <Head>
    <title>Create T3 App</title>
    <meta name="description" content="Generated by create-t3-app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>;

  if (post.isSuccess) {
    return (
      <main className="container mx-auto flex flex-col items-center  min-h-screen p-4">
        <PostCard post={post.data} />
        <div className="mb-20" />
        <MessageInput onMessageSubmit={handleAddComment} />
        {postComments.isSuccess && (
          <CommentsList comments={postComments.data} />
        )}
      </main>
    );
  }
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (!session) {
    return {
      redirect: {
        destination: "/api/auth/signin",
        permanent: false,
      },
    };
  }
  return {
    props: { session },
  };
}

export default Post;
